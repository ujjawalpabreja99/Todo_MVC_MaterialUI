{"ast":null,"code":"import _objectSpread from \"/Users/ujjawalpabreja/Desktop/Sprinklr/TodoMVC-ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/ujjawalpabreja/Desktop/Sprinklr/TodoMVC-ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/ujjawalpabreja/Desktop/Sprinklr/TodoMVC-ReactJS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ujjawalpabreja/Desktop/Sprinklr/TodoMVC-ReactJS/src/TodoApp/TodoApp.js\";\nimport React, { useState } from \"react\";\nimport TodoInput from \"./TodoInput/TodoInput\";\nimport TodoList from \"./TodoList/TodoList\";\nimport Footer from \"./Footer/Footer\";\nimport { Box, Container } from \"@material-ui/core\";\nvar theme = {\n  spacing: 16\n}; // const initialTodos = JSON.parse(localStorage.getItem(\"todos\")) || [];\n\nvar initialTodos = [{\n  id: Date.now(),\n  description: \"lol\",\n  status: \"Active\"\n}, {\n  id: Date.now(),\n  description: \"lmao\",\n  status: \"Active\"\n}, {\n  id: Date.now(),\n  description: \"rofl\",\n  status: \"Active\"\n}];\nexport default function ToDoApp() {\n  var _useState = useState(initialTodos),\n      _useState2 = _slicedToArray(_useState, 2),\n      todos = _useState2[0],\n      setTodos = _useState2[1];\n\n  var _useState3 = useState(\"All\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filter = _useState4[0],\n      setFilter = _useState4[1];\n\n  var addTodo = function addTodo(text) {\n    var todo = {\n      id: Date.now(),\n      description: text,\n      status: \"Active\"\n    };\n    var updatedTodos = [].concat(_toConsumableArray(todos), [todo]);\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var deleteTodo = function deleteTodo(id) {\n    var updatedTodos = todos.filter(function (todo) {\n      return todo.id !== id;\n    });\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var editTodo = function editTodo(id, editedDescription) {\n    var updatedTodos = todos.map(function (todo) {\n      return todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n        description: editedDescription\n      }) : todo;\n    });\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var toggleTodo = function toggleTodo(id) {\n    console.log(\"toggle\", id);\n    var updatedTodos = todos.map(function (todo) {\n      return todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n        status: todo.status === \"Active\" ? \"Completed\" : \"Active\"\n      }) : todo;\n    });\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var archiveTodo = function archiveTodo(id) {\n    var updatedTodos = todos.map(function (todo) {\n      return todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n        status: todo.status === \"Archived\" ? \"Active\" : \"Archived\"\n      }) : todo;\n    });\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var switchFilter = function switchFilter(filter) {\n    setFilter(filter);\n  };\n\n  var getCount = function getCount() {\n    var activeCount = 0,\n        completedCount = 0;\n    todos.forEach(function (todo) {\n      activeCount += todo.status === \"Active\";\n      completedCount += todo.status === \"Completed\";\n    });\n    return {\n      activeCount: activeCount,\n      completedCount: completedCount\n    };\n  };\n\n  var clearCompleted = function clearCompleted() {\n    var updatedTodos = todos.filter(function (todo) {\n      return todo.status !== \"Completed\";\n    });\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var toggleCompleted = function toggleCompleted(checked) {\n    var updatedTodos = todos.map(function (todo) {\n      return _objectSpread(_objectSpread({}, todo), {}, {\n        status: todo.status !== \"Archived\" ? checked === true ? \"Completed\" : \"Active\" : \"Archived\"\n      });\n    });\n    setTodos(updatedTodos); // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  var filterTodos = function filterTodos() {\n    switch (filter) {\n      case \"Active\":\n        return todos.filter(function (todo) {\n          return todo.status === \"Active\";\n        });\n\n      case \"Completed\":\n        return todos.filter(function (todo) {\n          return todo.status === \"Completed\";\n        });\n\n      case \"Archived\":\n        return todos.filter(function (todo) {\n          return todo.status === \"Archived\";\n        });\n\n      default:\n        return todos.filter(function (todo) {\n          return todo.status !== \"Archived\";\n        });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    maxWidth: \"xl\",\n    fixed: \"true\",\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoInput, {\n    addTodo: addTodo,\n    toggleCompleted: toggleCompleted,\n    todosCount: getCount(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: filterTodos(),\n    deleteTodo: deleteTodo,\n    editTodo: editTodo,\n    toggleTodo: toggleTodo,\n    archiveTodo: archiveTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    switchFilter: switchFilter,\n    todosCount: getCount(),\n    clearCompleted: clearCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/ujjawalpabreja/Desktop/Sprinklr/TodoMVC-ReactJS/src/TodoApp/TodoApp.js"],"names":["React","useState","TodoInput","TodoList","Footer","Box","Container","theme","spacing","initialTodos","id","Date","now","description","status","ToDoApp","todos","setTodos","filter","setFilter","addTodo","text","todo","updatedTodos","deleteTodo","editTodo","editedDescription","map","toggleTodo","console","log","archiveTodo","switchFilter","getCount","activeCount","completedCount","forEach","clearCompleted","toggleCompleted","checked","filterTodos"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TodoInput from \"./TodoInput/TodoInput\";\nimport TodoList from \"./TodoList/TodoList\";\nimport Footer from \"./Footer/Footer\";\nimport { Box, Container } from \"@material-ui/core\";\n\nconst theme = {\n  spacing: 16,\n};\n// const initialTodos = JSON.parse(localStorage.getItem(\"todos\")) || [];\nconst initialTodos = [\n  {\n    id: Date.now(),\n    description: \"lol\",\n    status: \"Active\",\n  },\n  {\n    id: Date.now(),\n    description: \"lmao\",\n    status: \"Active\",\n  },\n  {\n    id: Date.now(),\n    description: \"rofl\",\n    status: \"Active\",\n  },\n];\nexport default function ToDoApp() {\n  const [todos, setTodos] = useState(initialTodos);\n  const [filter, setFilter] = useState(\"All\");\n\n  const addTodo = (text) => {\n    const todo = {\n      id: Date.now(),\n      description: text,\n      status: \"Active\",\n    };\n    const updatedTodos = [...todos, todo];\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const deleteTodo = (id) => {\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const editTodo = (id, editedDescription) => {\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id ? { ...todo, description: editedDescription } : todo\n    );\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const toggleTodo = (id) => {\n    console.log(\"toggle\", id);\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id\n        ? { ...todo, status: todo.status === \"Active\" ? \"Completed\" : \"Active\" }\n        : todo\n    );\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const archiveTodo = (id) => {\n    const updatedTodos = todos.map((todo) =>\n      todo.id === id\n        ? {\n            ...todo,\n            status: todo.status === \"Archived\" ? \"Active\" : \"Archived\",\n          }\n        : todo\n    );\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const switchFilter = (filter) => {\n    setFilter(filter);\n  };\n\n  const getCount = () => {\n    let activeCount = 0,\n      completedCount = 0;\n    todos.forEach((todo) => {\n      activeCount += todo.status === \"Active\";\n      completedCount += todo.status === \"Completed\";\n    });\n    return { activeCount: activeCount, completedCount: completedCount };\n  };\n\n  const clearCompleted = () => {\n    const updatedTodos = todos.filter((todo) => todo.status !== \"Completed\");\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const toggleCompleted = (checked) => {\n    const updatedTodos = todos.map((todo) => ({\n      ...todo,\n      status:\n        todo.status !== \"Archived\"\n          ? checked === true\n            ? \"Completed\"\n            : \"Active\"\n          : \"Archived\",\n    }));\n    setTodos(updatedTodos);\n    // localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n  };\n\n  const filterTodos = () => {\n    switch (filter) {\n      case \"Active\":\n        return todos.filter((todo) => todo.status === \"Active\");\n      case \"Completed\":\n        return todos.filter((todo) => todo.status === \"Completed\");\n      case \"Archived\":\n        return todos.filter((todo) => todo.status === \"Archived\");\n      default:\n        return todos.filter((todo) => todo.status !== \"Archived\");\n    }\n  };\n\n  return (\n    <Box maxWidth=\"xl\" fixed=\"true\" mt={2}>\n      <TodoInput\n        addTodo={addTodo}\n        toggleCompleted={toggleCompleted}\n        todosCount={getCount()}\n      />\n      <TodoList\n        todos={filterTodos()}\n        deleteTodo={deleteTodo}\n        editTodo={editTodo}\n        toggleTodo={toggleTodo}\n        archiveTodo={archiveTodo}\n      />\n      <Footer\n        switchFilter={switchFilter}\n        todosCount={getCount()}\n        clearCompleted={clearCompleted}\n      />\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}